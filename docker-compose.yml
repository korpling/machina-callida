version: '3.7'

services:
  csm:
    build:
      context: ./mc_backend
      dockerfile: Dockerfile
    command: /home/mc/venv/bin/gunicorn -c csm/gunicorn_config.py run_csm:app
    depends_on:
      - db
    environment:
      - FLASK_APP=run_csm.py
      - IS_THIS_A_DOCKER_CONTAINER=Yes
      - PYTHONPATH=/home/mc
    ports:
      - "8122:22"
      - "6555:6555"
    restart: always
    stdin_open: true
  db:
    image: postgres
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
  mc_frontend:
    build:
      context: ./mc_frontend
      dockerfile: Dockerfile
    entrypoint: ng build --prod app
    environment:
      - CHROME_BIN=google-chrome
    stdin_open: true
    tty: true
    volumes:
      - $PWD/mc_frontend/www:/home/mc/mc_frontend/www
  mcserver:
    build:
      context: ./mc_backend
      dockerfile: Dockerfile
    command: /home/mc/venv/bin/gunicorn -c mcserver/gunicorn_config.py app:app
    depends_on:
      - db
    environment:
      - FLASK_APP=app.py
      - IS_THIS_A_DOCKER_CONTAINER=Yes
      - PYTHONPATH=/home/mc
    ports:
      - "8022:22"
      - "5000:5000"
    restart: always
    stdin_open: true
  nginx:
    command: nginx -g "daemon off;"
    image: nginx:alpine
    ports:
      - "8100:80"
    restart: always
    volumes:
      - $PWD/mc_frontend/www:/usr/share/nginx/html
      - ./mc_frontend/nginx.conf:/etc/nginx/nginx.conf
volumes:
  db-data:
