# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi.openapi_server.models.base_model_ import Model
from openapi.openapi_server.models.exercise_type_path import ExerciseTypePath
from openapi.openapi_server import util

from openapi.openapi_server.models.exercise_type_path import ExerciseTypePath  # noqa: E501

class H5PForm(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, eid=None, exercise_type_path=None, lang=None, solution_indices=None):  # noqa: E501
        """H5PForm - a model defined in OpenAPI

        :param eid: The eid of this H5PForm.  # noqa: E501
        :type eid: str
        :param exercise_type_path: The exercise_type_path of this H5PForm.  # noqa: E501
        :type exercise_type_path: ExerciseTypePath
        :param lang: The lang of this H5PForm.  # noqa: E501
        :type lang: str
        :param solution_indices: The solution_indices of this H5PForm.  # noqa: E501
        :type solution_indices: List[int]
        """
        self.openapi_types = {
            'eid': str,
            'exercise_type_path': ExerciseTypePath,
            'lang': str,
            'solution_indices': List[int]
        }

        self.attribute_map = {
            'eid': 'eid',
            'exercise_type_path': 'exercise_type_path',
            'lang': 'lang',
            'solution_indices': 'solution_indices'
        }

        self._eid = eid
        self._exercise_type_path = exercise_type_path
        self._lang = lang
        self._solution_indices = solution_indices

    @classmethod
    def from_dict(cls, dikt) -> 'H5PForm':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The H5PForm of this H5PForm.  # noqa: E501
        :rtype: H5PForm
        """
        return util.deserialize_model(dikt, cls)

    @property
    def eid(self):
        """Gets the eid of this H5PForm.

        Unique identifier (UUID) for the exercise.  # noqa: E501

        :return: The eid of this H5PForm.
        :rtype: str
        """
        return self._eid

    @eid.setter
    def eid(self, eid):
        """Sets the eid of this H5PForm.

        Unique identifier (UUID) for the exercise.  # noqa: E501

        :param eid: The eid of this H5PForm.
        :type eid: str
        """

        self._eid = eid

    @property
    def exercise_type_path(self):
        """Gets the exercise_type_path of this H5PForm.


        :return: The exercise_type_path of this H5PForm.
        :rtype: ExerciseTypePath
        """
        return self._exercise_type_path

    @exercise_type_path.setter
    def exercise_type_path(self, exercise_type_path):
        """Sets the exercise_type_path of this H5PForm.


        :param exercise_type_path: The exercise_type_path of this H5PForm.
        :type exercise_type_path: ExerciseTypePath
        """

        self._exercise_type_path = exercise_type_path

    @property
    def lang(self):
        """Gets the lang of this H5PForm.

        ISO 639-1 Language Code for the localization of exercise content.  # noqa: E501

        :return: The lang of this H5PForm.
        :rtype: str
        """
        return self._lang

    @lang.setter
    def lang(self, lang):
        """Sets the lang of this H5PForm.

        ISO 639-1 Language Code for the localization of exercise content.  # noqa: E501

        :param lang: The lang of this H5PForm.
        :type lang: str
        """

        self._lang = lang

    @property
    def solution_indices(self):
        """Gets the solution_indices of this H5PForm.

        Indices for the solutions that should be included in the download.  # noqa: E501

        :return: The solution_indices of this H5PForm.
        :rtype: List[int]
        """
        return self._solution_indices

    @solution_indices.setter
    def solution_indices(self, solution_indices):
        """Sets the solution_indices of this H5PForm.

        Indices for the solutions that should be included in the download.  # noqa: E501

        :param solution_indices: The solution_indices of this H5PForm.
        :type solution_indices: List[int]
        """

        self._solution_indices = solution_indices
