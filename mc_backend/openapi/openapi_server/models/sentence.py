# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi.openapi_server.models.base_model_ import Model
from openapi.openapi_server import util


class Sentence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, matching_degree=None):  # noqa: E501
        """Sentence - a model defined in OpenAPI

        :param id: The id of this Sentence.  # noqa: E501
        :type id: int
        :param matching_degree: The matching_degree of this Sentence.  # noqa: E501
        :type matching_degree: float
        """
        self.openapi_types = {
            'id': int,
            'matching_degree': float
        }

        self.attribute_map = {
            'id': 'id',
            'matching_degree': 'matching_degree'
        }

        self._id = id
        self._matching_degree = matching_degree

    @classmethod
    def from_dict(cls, dikt) -> 'Sentence':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Sentence of this Sentence.  # noqa: E501
        :rtype: Sentence
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Sentence.

        Unique identifier (in the corpus).  # noqa: E501

        :return: The id of this Sentence.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Sentence.

        Unique identifier (in the corpus).  # noqa: E501

        :param id: The id of this Sentence.
        :type id: int
        """

        self._id = id

    @property
    def matching_degree(self):
        """Gets the matching_degree of this Sentence.

        Percentage of words in the sentence that match a reference vocabulary.  # noqa: E501

        :return: The matching_degree of this Sentence.
        :rtype: float
        """
        return self._matching_degree

    @matching_degree.setter
    def matching_degree(self, matching_degree):
        """Sets the matching_degree of this Sentence.

        Percentage of words in the sentence that match a reference vocabulary.  # noqa: E501

        :param matching_degree: The matching_degree of this Sentence.
        :type matching_degree: float
        """

        self._matching_degree = matching_degree
