# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi.openapi_server.models.base_model_ import Model
from openapi.openapi_server import util


class StaticExercise(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, solutions=None, urn=None):  # noqa: E501
        """StaticExercise - a model defined in OpenAPI

        :param solutions: The solutions of this StaticExercise.  # noqa: E501
        :type solutions: List[List[str]]
        :param urn: The urn of this StaticExercise.  # noqa: E501
        :type urn: str
        """
        self.openapi_types = {
            'solutions': List[List[str]],
            'urn': str
        }

        self.attribute_map = {
            'solutions': 'solutions',
            'urn': 'urn'
        }

        self._solutions = solutions
        self._urn = urn

    @classmethod
    def from_dict(cls, dikt) -> 'StaticExercise':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StaticExercise of this StaticExercise.  # noqa: E501
        :rtype: StaticExercise
        """
        return util.deserialize_model(dikt, cls)

    @property
    def solutions(self):
        """Gets the solutions of this StaticExercise.

        Solutions for the exercise.  # noqa: E501

        :return: The solutions of this StaticExercise.
        :rtype: List[List[str]]
        """
        return self._solutions

    @solutions.setter
    def solutions(self, solutions):
        """Sets the solutions of this StaticExercise.

        Solutions for the exercise.  # noqa: E501

        :param solutions: The solutions of this StaticExercise.
        :type solutions: List[List[str]]
        """

        self._solutions = solutions

    @property
    def urn(self):
        """Gets the urn of this StaticExercise.

        CTS URN for the text passage from which the exercise was created.  # noqa: E501

        :return: The urn of this StaticExercise.
        :rtype: str
        """
        return self._urn

    @urn.setter
    def urn(self, urn):
        """Sets the urn of this StaticExercise.

        CTS URN for the text passage from which the exercise was created.  # noqa: E501

        :param urn: The urn of this StaticExercise.
        :type urn: str
        """

        self._urn = urn
