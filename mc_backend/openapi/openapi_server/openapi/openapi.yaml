openapi: 3.0.0
info:
  title: Machina Callida Backend REST API
  version: "1.0"
servers:
- url: http://localhost:5000/mc/api/v1.0
paths:
  /corpora:
    get:
      operationId: mcserver_app_api_corpus_list_api_get
      parameters:
      - description: Time (in milliseconds) of the last update.
        explode: true
        in: query
        name: last_update_time
        required: true
        schema:
          example: 123456789
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Corpus'
          description: Corpus list
      summary: Returns a list of corpora.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /corpora/{cid}:
    delete:
      operationId: mcserver_app_api_corpus_api_delete
      parameters:
      - description: Corpus identifier.
        explode: false
        in: path
        name: cid
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                example: true
                type: boolean
          description: Indication of success
      summary: Deletes a single corpus by ID.
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      operationId: mcserver_app_api_corpus_api_get
      parameters:
      - description: Corpus identifier.
        explode: false
        in: path
        name: cid
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Corpus'
          description: Corpus object
      summary: Returns a single corpus by ID.
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      operationId: mcserver_app_api_corpus_api_patch
      parameters:
      - description: Corpus identifier.
        explode: false
        in: path
        name: cid
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      - description: Author of the texts in the corpus.
        explode: true
        in: query
        name: author
        required: false
        schema:
          example: Aulus Gellius
          type: string
        style: form
      - description: CTS base URN for referencing the corpus.
        explode: true
        in: query
        name: source_urn
        required: false
        schema:
          example: urn:cts:latinLit:phi1254.phi001.perseus-lat2
          type: string
        style: form
      - description: Corpus title.
        explode: true
        in: query
        name: title
        required: false
        schema:
          example: Noctes Atticae
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Corpus'
          description: Corpus object
      summary: Updates a single corpus by ID.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /exercise:
    get:
      operationId: mcserver_app_api_exercise_api_get
      parameters:
      - description: Unique identifier (UUID) for the exercise.
        in: query
        name: eid
        required: true
        schema:
          example: 12345678-1234-5678-1234-567812345678
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnisResponse'
          description: Exercise data object, including a graph model for linguistic
            annotations.
      summary: Returns exercise data by ID.
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      operationId: mcserver_app_api_exercise_api_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExerciseForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnisResponse'
          description: Exercise data object
      summary: Creates a new exercise.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /exerciseList:
    get:
      operationId: mcserver_app_api_exercise_list_api_get
      parameters:
      - description: ISO 639-1 Language Code for the localization of exercise content.
        in: query
        name: lang
        required: true
        schema:
          example: en
          type: string
      - description: Upper bound for reference vocabulary frequency.
        explode: true
        in: query
        name: frequency_upper_bound
        required: false
        schema:
          default: 0
          example: 500
          type: integer
        style: form
      - description: Time (in milliseconds) of the last update.
        explode: true
        in: query
        name: last_update_time
        required: false
        schema:
          default: 0
          example: 123456789
          type: integer
        style: form
      - description: Identifier for a reference vocabulary.
        explode: true
        in: query
        name: vocabulary
        required: false
        schema:
          $ref: '#/components/schemas/VocabularyMC'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MatchingExercise'
                type: array
          description: Data for interactive exercises, excluding the linguistic details.
      summary: Provides metadata for all available exercises.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /file:
    get:
      operationId: mcserver_app_api_file_api_get
      parameters:
      - description: Unique identifier (UUID) for an exercise.
        explode: true
        in: query
        name: id
        required: true
        schema:
          example: 12345678-1234-5678-1234-567812345678
          type: string
        style: form
      - description: File format for the requested download.
        explode: true
        in: query
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/FileType'
        style: form
      - description: Indices for the solutions that should be included in the download.
        in: query
        name: solution_indices
        required: false
        schema:
          default: []
          items:
            example: 0
            type: integer
          type: array
      responses:
        "200":
          content:
            application/pdf:
              schema:
                type: object
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: object
            application/xml:
              schema:
                type: object
          description: Data for interactive exercises, excluding the linguistic details.
      summary: Provides the URL to download a specific file.
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      operationId: mcserver_app_api_file_api_post
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/x-www-form-urlencoded:
            schema:
              description: Data that should be serialized and persisted.
              properties:
                file_type:
                  $ref: '#/components/schemas/FileType'
                html_content:
                  description: HTML content to be serialized.
                  example: <html></html>
                  type: string
                learning_result:
                  description: Serialized XAPI results for an interactive exercise.
                  example: '{''0'': {}}'
                  type: string
                urn:
                  description: CTS URN for the text passage from which the HTML content
                    was created.
                  example: urn:cts:latinLit:phi0448.phi001.perseus-lat2:1.1.1-1.1.1
                  type: string
              type: object
              x-body-name: file_data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Indication of success, or name of the file that was generated.
                example: 12345678-1234-5678-1234-567812345678.pdf
                type: string
          description: Indication of success, possibly a reference to the resulting
            file.
      summary: Serializes and persists learning results or HTML content for later
        access.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /frequency:
    get:
      operationId: mcserver_app_api_frequency_api_get
      parameters:
      - description: CTS URN for referencing the corpus.
        in: query
        name: urn
        required: true
        schema:
          example: urn:cts:latinLit:phi1254.phi001.perseus-lat2:5.6.21-5.6.21
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: List of items with frequency data for linguistic phenomena.
                items:
                  $ref: '#/components/schemas/FrequencyItem'
                type: array
          description: Frequency analysis, i.e. a list of frequency items.
      summary: Returns results for a frequency query from ANNIS for a given CTS URN.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /h5p:
    get:
      operationId: mcserver_app_api_h5p_api_get
      parameters:
      - description: Unique identifier (UUID) for the exercise.
        in: query
        name: eid
        required: true
        schema:
          example: 12345678-1234-5678-1234-567812345678
          type: string
      - description: ISO 639-1 Language Code for the localization of exercise content.
        in: query
        name: lang
        required: true
        schema:
          example: en
          type: string
      - description: Indices for the solutions that should be included in the download.
        in: query
        name: solution_indices
        required: false
        schema:
          default: []
          items:
            example: 0
            type: integer
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                description: JSON template for an interactive H5P exercise.
                example: {}
                type: object
          description: JSON template for an interactive H5P exercise.
      summary: Provides JSON templates for client-side H5P exercise layouts.
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      operationId: mcserver_app_api_h5p_api_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/H5PForm'
        required: true
      responses:
        "200":
          content:
            application/zip:
              schema:
                type: object
          description: ZIP archive (with the H5P file extension) containing data for
            a H5P exercise.
      summary: Offers H5P exercises for download as ZIP archives (with the H5P file
        extension).
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /kwic:
    post:
      operationId: mcserver_app_api_kwic_api_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KwicForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: HTML strings with SVG elements for rendering KWIC images.
      summary: Provides example contexts for a given phenomenon in a given corpus.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rawtext:
    get:
      operationId: mcserver_app_api_raw_text_api_get
      parameters:
      - description: CTS URN for referencing the corpus.
        in: query
        name: urn
        required: true
        schema:
          example: urn:cts:latinLit:phi1254.phi001.perseus-lat2:5.6.21-5.6.21
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnisResponse'
          description: Graph data for the text passage, including raw text and annotations.
      summary: Provides the raw text for a requested text passage.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /staticExercises:
    get:
      operationId: mcserver_app_api_static_exercises_api_get
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/StaticExercise'
                type: object
          description: Metadata for static exercises, mapped to their respective URIs
            in the frontend.
      summary: Returns metadata for static exercises.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /textcomplexity:
    get:
      operationId: mcserver_app_api_textcomplexity_api_get
      parameters:
      - description: The desired measure of text complexity for the given text passage.
        explode: true
        in: query
        name: measure
        required: true
        schema:
          example: all
          type: string
        style: form
      - description: CTS URN for referencing the corpus.
        in: query
        name: urn
        required: true
        schema:
          example: urn:cts:latinLit:phi1254.phi001.perseus-lat2:5.6.21-5.6.21
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextComplexity'
          description: Text complexity measures for a given text.
      summary: Gives users measures of text complexity for a given text.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /validReff:
    get:
      operationId: mcserver_app_api_valid_reff_api_get
      parameters:
      - description: CTS URN for referencing the corpus.
        in: query
        name: urn
        required: true
        schema:
          example: urn:cts:latinLit:phi1254.phi001.perseus-lat2:5.6.21-5.6.21
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  example: urn:custom:latinLit:proiel.caes-gal.lat:1.1.1
                  type: string
                type: array
          description: Valid references for the desired text.
      summary: Gives users all the citable text references for a corpus.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /vectorNetwork:
    get:
      operationId: mcserver_app_api_vector_network_api_get
      parameters:
      - description: Regular expression to determine relevant words in the text.
        explode: true
        in: query
        name: search_regex
        required: true
        schema:
          $ref: '#/components/schemas/SearchRegex'
        style: form
      - description: Regular expression to determine words in the text that should
          be highlighted.
        explode: true
        in: query
        name: highlight_regex
        required: false
        schema:
          default: ""
          example: ver[aoe]
          type: string
        style: form
      - description: Minimum number of occurrences that a word needs to be included
          in the analysis.
        explode: true
        in: query
        name: min_count
        required: false
        schema:
          default: 1
          example: 3
          type: integer
        style: form
      - description: Number of nearest neighbors that should be considered for each
          relevant word.
        explode: true
        in: query
        name: nearest_neighbor_count
        required: false
        schema:
          $ref: '#/components/schemas/NearestNeighborCount'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: HTML string with SVG elements for rendering the network graph.
      summary: Provides network data for the vectors in an AI model.
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      operationId: mcserver_app_api_vector_network_api_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VectorNetworkForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                description: List of tokenized sentences.
                items:
                  description: Tokenized sentence.
                  example:
                  - in
                  - vino
                  - veritas
                  items:
                    description: Token of a sentence.
                    example: veritas
                    type: string
                  type: array
                type: array
          description: Sentences whose content is similar to a given word.
      summary: Provides network data for the vectors in an AI model.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /vocabulary:
    get:
      operationId: mcserver_app_api_vocabulary_api_get
      parameters:
      - description: Upper bound for reference vocabulary frequency.
        explode: true
        in: query
        name: frequency_upper_bound
        required: true
        schema:
          example: 500
          type: integer
        style: form
      - description: URN for the query corpus.
        explode: true
        in: query
        name: query_urn
        required: true
        schema:
          example: urn:cts:latinLit:phi0448.phi001.perseus-lat2:1.1.1-1.1.1
          type: string
        style: form
      - description: Identifier for a reference vocabulary.
        explode: true
        in: query
        name: vocabulary
        required: true
        schema:
          $ref: '#/components/schemas/VocabularyMC'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sentence'
                type: array
          description: Retrieves sentence ID and matching degree for each sentence
            in the query text.
      summary: Shows how well the vocabulary of a text matches a predefined reference
        vocabulary.
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      operationId: mcserver_app_api_vocabulary_api_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VocabularyForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnisResponse'
          description: Indicates for each token of a corpus whether it is covered
            by a reference vocabulary.
      summary: Shows how well the vocabulary of a text matches a predefined reference
        vocabulary.
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  requestBodies:
    inline_object:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
  schemas:
    TextComplexityFormExtension:
      allOf:
      - $ref: '#/components/schemas/TextComplexityForm'
      type: object
    Corpus:
      description: Collection of texts.
      example:
        citation_level_3: Section
        author: Aulus Gellius
        source_urn: urn:cts:latinLit:phi1254.phi001.perseus-lat2
        title: Noctes Atticae
        citation_level_1: Book
        cid: 1
        citation_level_2: Chapter
      properties:
        author:
          default: Anonymus
          description: Author of the texts in the corpus.
          example: Aulus Gellius
          nullable: false
          type: string
        cid:
          description: Unique identifier for the corpus.
          example: 1
          type: integer
          x-primary-key: true
          x-autoincrement: true
        citation_level_1:
          default: default
          description: First level for citing the corpus.
          example: Book
          type: string
        citation_level_2:
          default: default
          description: Second level for citing the corpus.
          example: Chapter
          type: string
        citation_level_3:
          default: default
          description: Third level for citing the corpus.
          example: Section
          type: string
        source_urn:
          description: CTS base URN for referencing the corpus.
          example: urn:cts:latinLit:phi1254.phi001.perseus-lat2
          type: string
          x-unique: true
        title:
          default: Anonymus
          description: Corpus title.
          example: Noctes Atticae
          nullable: false
          type: string
      required:
      - source_urn
      type: object
      x-tablename: Corpus
    AnnisResponse:
      description: A response with graph data from ANNIS, possibly with additional
        data for exercises.
      example:
        frequency_analysis:
        - values:
          - values
          - values
          count: 1
          phenomena:
          - upostag
          - upostag
        - values:
          - values
          - values
          count: 1
          phenomena:
          - upostag
          - upostag
        text_complexity:
          all: 42.31
          n_abl_abs: 1
          n_clause: 1
          n_part: 1
          n_subclause: 1
          n_punct: 1
          n_w: 1
          n_inf: 1
          n_sent: 1
          n_types: 1
          avg_w_per_sent: 5.4
          lex_den: 0.43
          avg_w_len: 5.4
          n_gerund: 1
          pos: 1
        exercise_id: 12345678-1234-5678-1234-567812345678
        solutions:
        - value:
            token_id: 9
            sentence_id: 52548
            content: unam
            salt_id: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok9
          target:
            token_id: 9
            sentence_id: 52548
            content: unam
            salt_id: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok9
        - value:
            token_id: 9
            sentence_id: 52548
            content: unam
            salt_id: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok9
          target:
            token_id: 9
            sentence_id: 52548
            content: unam
            salt_id: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok9
        graph_data:
          directed: true
          nodes:
          - annis_node_name: urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
            udep_xpostag: Ne
            solution: solution
            annis_tok: Galliae
            annis_type: node
            annis_node_type: node
            udep_lemma: Gallia
            udep_feats: Case=Nom|Gender=Fem|Number=Sing
            id: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
            udep_upostag: PROPN
            is_oov: true
          - annis_node_name: urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
            udep_xpostag: Ne
            solution: solution
            annis_tok: Galliae
            annis_type: node
            annis_node_type: node
            udep_lemma: Gallia
            udep_feats: Case=Nom|Gender=Fem|Number=Sing
            id: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
            udep_upostag: PROPN
            is_oov: true
          links:
          - annis_component_name: dep
            annis_component_type: Pointing
            source: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
            udep_deprel: det
            target: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok3
          - annis_component_name: dep
            annis_component_type: Pointing
            source: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
            udep_deprel: det
            target: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok3
          graph: {}
          multigraph: true
        uri: /mc/api/v1.0/file/fd97630c-1f5a-4102-af56-20eb0babdfee
        exercise_type: ddwtos
      properties:
        exercise_id:
          default: ""
          description: Unique identifier (UUID) for the exercise.
          example: 12345678-1234-5678-1234-567812345678
          type: string
        exercise_type:
          default: ""
          description: Type of exercise, concerning interaction and layout.
          example: ddwtos
          type: string
        frequency_analysis:
          default: []
          description: List of items with frequency data for linguistic phenomena.
          items:
            $ref: '#/components/schemas/FrequencyItem'
          type: array
        graph_data:
          $ref: '#/components/schemas/GraphData'
        solutions:
          default: []
          description: Correct solutions for this exercise.
          items:
            $ref: '#/components/schemas/Solution'
          type: array
        text_complexity:
          $ref: '#/components/schemas/TextComplexity'
        uri:
          default: ""
          description: URI for accessing the exercise in this API.
          example: /mc/api/v1.0/file/fd97630c-1f5a-4102-af56-20eb0babdfee
          type: string
      type: object
    FrequencyItem:
      example:
        values:
        - values
        - values
        count: 1
        phenomena:
        - upostag
        - upostag
      properties:
        count:
          default: 0
          description: How often the given combination of values occurred.
          example: 1
          type: integer
        phenomena:
          default: []
          description: Labels for the linguistic phenomena described in this frequency
            entry.
          items:
            $ref: '#/components/schemas/Phenomenon'
          type: array
        values:
          default: []
          description: Values for the phenomena described in this frequency entry.
          items:
            type: string
          type: array
      type: object
    Phenomenon:
      description: 'Linguistic phenomena: syntactic dependencies, morphological features,
        lemmata, parts of speech.'
      enum:
      - dependency
      - feats
      - lemma
      - upostag
      example: upostag
      type: string
    GraphData:
      description: Nodes, edges and metadata for a graph.
      example:
        directed: true
        nodes:
        - annis_node_name: urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
          udep_xpostag: Ne
          solution: solution
          annis_tok: Galliae
          annis_type: node
          annis_node_type: node
          udep_lemma: Gallia
          udep_feats: Case=Nom|Gender=Fem|Number=Sing
          id: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
          udep_upostag: PROPN
          is_oov: true
        - annis_node_name: urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
          udep_xpostag: Ne
          solution: solution
          annis_tok: Galliae
          annis_type: node
          annis_node_type: node
          udep_lemma: Gallia
          udep_feats: Case=Nom|Gender=Fem|Number=Sing
          id: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
          udep_upostag: PROPN
          is_oov: true
        links:
        - annis_component_name: dep
          annis_component_type: Pointing
          source: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
          udep_deprel: det
          target: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok3
        - annis_component_name: dep
          annis_component_type: Pointing
          source: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
          udep_deprel: det
          target: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok3
        graph: {}
        multigraph: true
      properties:
        directed:
          description: Whether edges in the returned graph are directed.
          example: true
          type: boolean
        graph:
          description: Additional graph data.
          example: {}
          type: object
        links:
          description: List of edges for the graph.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        multigraph:
          description: Whether the graph consists of multiple subgraphs.
          example: true
          type: boolean
        nodes:
          description: List of nodes for the graph.
          items:
            $ref: '#/components/schemas/NodeMC'
          type: array
      required:
      - links
      - nodes
      type: object
    Link:
      example:
        annis_component_name: dep
        annis_component_type: Pointing
        source: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
        udep_deprel: det
        target: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok3
      properties:
        annis_component_name:
          description: Component name as given by ANNIS.
          example: dep
          type: string
        annis_component_type:
          description: Component type as given by ANNIS.
          example: Pointing
          type: string
        source:
          description: ID of the source node for the edge.
          example: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
          type: string
        target:
          description: ID of the target node for the edge.
          example: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok3
          type: string
        udep_deprel:
          description: Dependency relation described by the edge.
          example: det
          type: string
      type: object
    NodeMC:
      example:
        annis_node_name: urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
        udep_xpostag: Ne
        solution: solution
        annis_tok: Galliae
        annis_type: node
        annis_node_type: node
        udep_lemma: Gallia
        udep_feats: Case=Nom|Gender=Fem|Number=Sing
        id: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
        udep_upostag: PROPN
        is_oov: true
      properties:
        annis_node_name:
          description: Node name as given by ANNIS.
          example: urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
          type: string
        annis_node_type:
          description: Node type as given by ANNIS.
          example: node
          type: string
        annis_tok:
          description: Raw word form as given by ANNIS.
          example: Galliae
          type: string
        annis_type:
          description: Node type as given by ANNIS (?).
          example: node
          type: string
        id:
          description: Unique identifier for the node in the SALT model.
          example: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok1
          type: string
        is_oov:
          description: Whether the raw word form is missing in a given vocabulary.
          example: true
          type: boolean
        udep_lemma:
          description: Lemmatized word form.
          example: Gallia
          type: string
        udep_upostag:
          description: Universal part of speech tag for the word form.
          example: PROPN
          type: string
        udep_xpostag:
          description: Language-specific part of speech tag for the word form.
          example: Ne
          type: string
        udep_feats:
          description: Additional morphological information.
          example: Case=Nom|Gender=Fem|Number=Sing
          type: string
        solution:
          description: Solution value for this node in an exercise.
          type: string
      type: object
    Solution:
      description: Correct solution for an exercise.
      example:
        value:
          token_id: 9
          sentence_id: 52548
          content: unam
          salt_id: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok9
        target:
          token_id: 9
          sentence_id: 52548
          content: unam
          salt_id: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok9
      properties:
        target:
          $ref: '#/components/schemas/SolutionElement'
        value:
          $ref: '#/components/schemas/SolutionElement'
      type: object
    SolutionElement:
      description: Target or value of a correct solution for an exercise.
      example:
        token_id: 9
        sentence_id: 52548
        content: unam
        salt_id: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok9
      properties:
        content:
          description: Content of the solution element.
          example: unam
          type: string
        salt_id:
          description: Unique identifier for the node in the SALT model.
          example: salt:/urn:custom:latinLit:proiel.caes-gal.lat:1.1.1/doc1#sent52548tok9
          type: string
        sentence_id:
          description: Unique identifier for the sentence in a corpus.
          example: 52548
          type: integer
        token_id:
          description: Unique identifier for the token in a sentence.
          example: 9
          type: integer
      required:
      - sentence_id
      - token_id
      type: object
    TextComplexity:
      description: Mapping of various elements of text complexity to their corresponding
        values.
      example:
        all: 42.31
        n_abl_abs: 1
        n_clause: 1
        n_part: 1
        n_subclause: 1
        n_punct: 1
        n_w: 1
        n_inf: 1
        n_sent: 1
        n_types: 1
        avg_w_per_sent: 5.4
        lex_den: 0.43
        avg_w_len: 5.4
        n_gerund: 1
        pos: 1
      properties:
        all:
          description: Overall text complexity of the given corpus.
          example: 42.31
          format: float
          type: number
        avg_w_len:
          description: Average length of a word in the given corpus.
          example: 5.4
          format: float
          type: number
        avg_w_per_sent:
          description: Average number of words per sentence.
          example: 5.4
          format: float
          type: number
        lex_den:
          description: Lexical density of the given corpus.
          example: 0.43
          format: float
          maximum: 1
          minimum: 0
          type: number
        n_abl_abs:
          description: Number of ablativi absoluti in the given corpus.
          example: 1
          type: integer
        n_clause:
          description: Number of clauses in the given corpus.
          example: 1
          type: integer
        n_gerund:
          description: Number of gerunds in the given corpus.
          example: 1
          type: integer
        n_inf:
          description: Number of infinitives in the given corpus.
          example: 1
          type: integer
        n_part:
          description: Number of participles in the given corpus.
          example: 1
          type: integer
        n_punct:
          description: Number of punctuation signs in the given corpus.
          example: 1
          type: integer
        n_sent:
          description: Number of sentences in the given corpus.
          example: 1
          type: integer
        n_subclause:
          description: Number of subclauses in the given corpus.
          example: 1
          type: integer
        n_types:
          description: Number of distinct word forms in the given corpus.
          example: 1
          type: integer
        n_w:
          description: Number of words in the given corpus.
          example: 1
          type: integer
        pos:
          description: Number of distinct part of speech tags in the given corpus.
          example: 1
          type: integer
      type: object
    ExerciseForm:
      allOf:
      - $ref: '#/components/schemas/ExerciseBase'
      - $ref: '#/components/schemas/ExerciseForm_allOf'
      type: object
      x-body-name: exercise_data
    ExerciseBase:
      description: Base data for creating and evaluating interactive exercises.
      properties:
        correct_feedback:
          default: ""
          description: Feedback for successful completion of the exercise.
          example: Well done!
          type: string
        general_feedback:
          default: ""
          description: Feedback for finishing the exercise.
          example: You have finished the exercise.
          type: string
        incorrect_feedback:
          default: ""
          description: Feedback for failing to complete the exercise successfully.
          example: Unfortunately, that answer is wrong.
          type: string
        instructions:
          default: ""
          description: Hints for how to complete the exercise.
          example: Fill in the gaps!
          type: string
        language:
          default: de
          description: ISO 639-1 Language Code for the localization of exercise content.
          example: en
          type: string
        partially_correct_feedback:
          default: ""
          description: Feedback for successfully completing certain parts of the exercise.
          example: Some parts of this answer are correct.
          type: string
        search_values:
          default: '[]'
          description: Search queries that were used to build the exercise.
          example: '[''upostag=noun'', ''dependency=object'']'
          type: string
        work_author:
          default: ""
          description: Name of the person who wrote the base text for the exercise.
          example: C. Iulius Caesar
          type: string
        work_title:
          default: ""
          description: Title of the base text for the exercise.
          example: Noctes Atticae
          type: string
      required:
      - instructions
      - search_values
      type: object
    VocabularyMC:
      description: 'Reference vocabularies: Ancient Greek and Latin Dependency Treebank,
        Bamberger Wortschatz, PROIEL treebank, VIVA textbook'
      enum:
      - agldt
      - bws
      - proiel
      - viva
      example: agldt
      type: string
    MatchingExercise:
      allOf:
      - $ref: '#/components/schemas/ExerciseBase'
      - $ref: '#/components/schemas/ExerciseExtension'
      - $ref: '#/components/schemas/MatchingExercise_allOf'
    ExerciseExtension:
      description: Additional data for creating and evaluating interactive exercises.
      properties:
        conll:
          default: ""
          description: CONLL-formatted linguistic annotations represented as a single
            string.
          example: \# newdoc id = ...\n# sent_id = 1\n# text = Caesar fortis est.\n1\tCaesar\tCaeso\tVERB
            ...
          nullable: false
          type: string
        eid:
          description: Unique identifier (UUID) for the exercise.
          example: 12345678-1234-5678-1234-567812345678
          type: string
          x-primary-key: true
        exercise_type:
          default: ""
          description: Type of exercise, concerning interaction and layout.
          example: markWords
          nullable: false
          type: string
        last_access_time:
          description: When the exercise was last accessed (as POSIX timestamp).
          example: 1234567.789
          format: float
          type: number
          x-index: true
        solutions:
          default: '[]'
          description: Correct solutions for the exercise.
          example: '[{''target'': {''sentence_id'': 1, ''token_id'': 7, ''salt_id'':
            ''salt:/urn:...'', ''content'': ''eo''}, ''value'': {''sentence_id'':
            0, ''token_id'': 0, ''content'': None, ''salt_id'': ''salt:/urn:...''}}]'
          nullable: false
          type: string
        text_complexity:
          default: 0
          description: Overall text complexity as measured by the software's internal
            language analysis.
          example: 54.53
          format: float
          type: number
        urn:
          default: ""
          description: CTS URN for the text passage from which the exercise was created.
          example: urn:cts:latinLit:phi0448.phi001.perseus-lat2:1.1.1-1.1.1
          nullable: false
          type: string
      required:
      - eid
      - last_access_time
      type: object
    FileType:
      description: File format for the requested serialization.
      enum:
      - docx
      - json
      - pdf
      - xml
      - zip
      example: pdf
      type: string
    H5PForm:
      description: Metadata for the H5P exercise.
      properties:
        eid:
          description: Unique identifier (UUID) for the exercise.
          example: 12345678-1234-5678-1234-567812345678
          type: string
        exercise_type_path:
          $ref: '#/components/schemas/ExerciseTypePath'
        lang:
          description: ISO 639-1 Language Code for the localization of exercise content.
          example: en
          type: string
        solution_indices:
          description: Indices for the solutions that should be included in the download.
          items:
            example: 0
            type: integer
          type: array
      type: object
      x-body-name: h5p_data
    ExerciseTypePath:
      description: Paths to the data directories for various H5P exercise types.
      enum:
      - drag_text
      - fill_blanks
      - mark_words
      - multi_choice
      - voc_list
      example: drag_text
      type: string
    KwicForm:
      description: Relevant parameters for creating a Keyword In Context view.
      properties:
        search_values:
          default: '[]'
          description: Search queries that were used to build the exercise.
          example: '[''upostag=noun'', ''dependency=object'']'
          type: string
        urn:
          description: CTS URN for the text passage from which the KWIC view should
            be generated.
          example: urn:cts:latinLit:phi0448.phi001.perseus-lat2:1.1.1-1.1.1
          type: string
        ctx_left:
          description: Number of tokens that should be given as context on the left
            side of a target.
          example: 5
          type: integer
        ctx_right:
          description: Number of tokens that should be given as context on the right
            side of a target.
          example: 5
          type: integer
      required:
      - ctx_left
      - ctx_right
      - search_values
      - urn
      type: object
      x-body-name: kwic_data
    StaticExercise:
      description: Metadata for a static exercise.
      properties:
        solutions:
          description: Solutions for the exercise.
          items:
            description: Single solution, given as tuple of correct response and its
              lemma.
            items:
              description: Correct response or corresponding lemma.
              example: gaudeas
              type: string
            type: array
          type: array
        urn:
          description: CTS URN for the text passage from which the exercise was created.
          example: urn:cts:latinLit:phi0448.phi001.perseus-lat2:1.1.1-1.1.1
          type: string
      type: object
    SearchRegex:
      description: Regular expression for a textual search.
      example: ver[aoe]
      type: string
    NearestNeighborCount:
      default: 0
      description: Number of nearest neighbors that should be considered for each
        target node in a graph analysis.
      example: 50
      type: integer
    VectorNetworkForm:
      description: Relevant parameters for finding sentences that are similar to a
        target word.
      properties:
        search_regex:
          description: Regular expression for a textual search.
          example: ver[aoe]
          type: string
        nearest_neighbor_count:
          default: 0
          description: Number of nearest neighbors that should be considered for each
            target node in a graph analysis.
          example: 50
          type: integer
      required:
      - search_regex
      type: object
      x-body-name: network_data
    Sentence:
      description: Sentence with metadata
      example:
        matching_degree: 76.34
        id: 1
      properties:
        id:
          description: Unique identifier (in the corpus).
          example: 1
          type: integer
        matching_degree:
          description: Percentage of words in the sentence that match a reference
            vocabulary.
          example: 76.34
          format: float
          type: number
      type: object
    VocabularyForm:
      description: Relevant parameters for comparing a corpus to a reference vocabulary.
      properties:
        frequency_upper_bound:
          description: Upper bound for reference vocabulary frequency.
          example: 500
          type: integer
        query_urn:
          description: URN for the query corpus.
          example: urn:cts:latinLit:phi0448.phi001.perseus-lat2:1.1.1-1.1.1
          type: string
        vocabulary:
          $ref: '#/components/schemas/VocabularyMC'
      required:
      - frequency_upper_bound
      - query_urn
      - vocabulary
      type: object
      x-body-name: vocabulary_data
    TextComplexityForm:
      description: Relevant parameters for measuring the text complexity of a text
        passage.
      discriminator:
        propertyName: measure
      properties:
        measure:
          description: Label of the desired measure for text complexity.
          example: all
          type: string
        urn:
          description: CTS URN for the text passage from which the text complexity
            should be calculated.
          example: urn:cts:latinLit:phi0448.phi001.perseus-lat2:1.1.1-1.1.1
          type: string
        annis_response:
          description: Serialized ANNIS response.
          example: '{}'
          type: string
      required:
      - measure
      - urn
      type: object
      x-body-name: complexity_data
    inline_object:
      description: Data that should be serialized and persisted.
      properties:
        file_type:
          $ref: '#/components/schemas/FileType'
        html_content:
          description: HTML content to be serialized.
          example: <html></html>
          type: string
        learning_result:
          description: Serialized XAPI results for an interactive exercise.
          example: '{''0'': {}}'
          type: string
        urn:
          description: CTS URN for the text passage from which the HTML content was
            created.
          example: urn:cts:latinLit:phi0448.phi001.perseus-lat2:1.1.1-1.1.1
          type: string
      type: object
      x-body-name: file_data
    ExerciseForm_allOf:
      description: Additional exercise data.
      properties:
        type:
          description: Type of exercise, concerning interaction and layout.
          example: markWords
          type: string
        type_translation:
          default: ""
          description: Localized expression of the exercise type.
          example: Cloze
          type: string
        urn:
          description: CTS URN for the text passage from which the exercise was created.
          example: urn:cts:latinLit:phi0448.phi001.perseus-lat2:1.1.1-1.1.1
          type: string
      required:
      - type
      - urn
    MatchingExercise_allOf:
      description: Extra data for comparison with a reference vocabulary.
      properties:
        exercise_type_translation:
          description: Localized expression of the exercise type.
          example: Cloze
          type: string
        matching_degree:
          description: Percentage of words in the exercise that match a reference
            vocabulary.
          example: 76.34
          format: float
          type: number
