/**
 * Machina Callida Backend REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { MatchingExerciseAllOf } from './matchingExerciseAllOf';
import { ExerciseExtension } from './exerciseExtension';
import { ExerciseBase } from './exerciseBase';


export interface MatchingExercise { 
    /**
     * Feedback for successful completion of the exercise.
     */
    correct_feedback?: string;
    /**
     * Feedback for finishing the exercise.
     */
    general_feedback?: string;
    /**
     * Feedback for failing to complete the exercise successfully.
     */
    incorrect_feedback?: string;
    /**
     * Hints for how to complete the exercise.
     */
    instructions: string;
    /**
     * ISO 639-1 Language Code for the localization of exercise content.
     */
    language?: string;
    /**
     * Feedback for successfully completing certain parts of the exercise.
     */
    partially_correct_feedback?: string;
    /**
     * Search queries that were used to build the exercise.
     */
    search_values: string;
    /**
     * Name of the person who wrote the base text for the exercise.
     */
    work_author?: string;
    /**
     * Title of the base text for the exercise.
     */
    work_title?: string;
    /**
     * CONLL-formatted linguistic annotations represented as a single string.
     */
    conll?: string;
    /**
     * Unique identifier (UUID) for the exercise.
     */
    eid: string;
    /**
     * Type of exercise, concerning interaction and layout.
     */
    exercise_type?: string;
    /**
     * When the exercise was last accessed (as POSIX timestamp).
     */
    last_access_time: number;
    /**
     * Correct solutions for the exercise.
     */
    solutions?: string;
    /**
     * Overall text complexity as measured by the software\'s internal language analysis.
     */
    text_complexity?: number;
    /**
     * CTS URN for the text passage from which the exercise was created.
     */
    urn?: string;
    /**
     * Localized expression of the exercise type.
     */
    exercise_type_translation?: string;
    /**
     * Percentage of words in the exercise that match a reference vocabulary.
     */
    matching_degree?: number;
}

